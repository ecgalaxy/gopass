---
- name: Check if gopass is already installed
  stat:
    path: "{{ gopass_path }}"
  register: __gopass_path

- block:
  - name: Install GnuPG
    package:
      name: gnupg2
      state: present
    become: true

  - name: Download gopass archive
    get_url:
      url: "{{ gopass_download_url }}"
      dest: /tmp/gopass.tar.gz
      mode: 0655
      checksum: "{{ gopass_checksum }}"

  - name: Download gopass summon archive
    get_url:
      url: "{{ gopass_summon_download_url }}"
      dest: /tmp/gopass-summon.tar.gz
      mode: 0655
      checksum: "{{ gopass_summon_checksum }}"

  - name: Ensure target folder exists
    file:
      path: "{{ gopass_path }}"
      state: directory
      owner: root
      group: root
      mode: 0755
    become: true

  - name: Extract gopass archive
    unarchive:
      src: /tmp/gopass.tar.gz
      dest: "{{ gopass_path }}"
      owner: root
      group: root
      remote_src: yes
    become: true

  - name: Extract gopass summon archive
    unarchive:
      src: /tmp/gopass-summon.tar.gz
      dest: "{{ gopass_path }}"
      owner: root
      group: root
      remote_src: yes
    become: true

  - name: Remove gopass archive
    file:
      path: /tmp/gopass.tar.gz
      state: absent

  - name: Remove gopass summon archive
    file:
      path: /tmp/gopass-summon.tar.gz
      state: absent

  - name: Create gopass symlink
    file:
      src: "{{ gopass_path }}/gopass"
      dest: "{{ gopass_bin }}"
      owner: root
      group: root
      state: link
    become: true

  - name: Ensure summon lib folder exists
    file:
      path: "{{ summon_lib_path }}"
      state: directory
      mode: 0755
    become: true

  - name: Create summon provider symlink
    file:
      src: "{{ gopass_path }}/gopass-summon-provider"
      dest: "{{ summon_lib_path }}/gopass-summon-provider"
      owner: root
      group: root
      state: link
    become: true
  when: not __gopass_path.stat.exists
